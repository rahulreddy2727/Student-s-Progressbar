{"version":3,"sources":["data/data.js","components/Subjects.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["data","id","maths","physics","chemistry","biology","english","totalPercentage","Subjects","props","variantName","studentData","Form","Control","type","placeholder","value","ProgressBar","variant","now","label","Input","useState","setStudentData","studentId","setStudentId","className","onChange","e","preventDefault","target","map","student","onClick","Number","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.999bcaa6.chunk.js","sourcesContent":["const data = [\r\n  {\r\n    id: 1,\r\n    maths: 90,\r\n    physics: 80,\r\n    chemistry: 100,\r\n    biology: 90,\r\n    english: 90,\r\n    totalPercentage: 95,\r\n  },\r\n  {\r\n    id: 2,\r\n    maths: 70,\r\n    physics: 60,\r\n    chemistry: 80,\r\n    biology: 50,\r\n    english: 90,\r\n    totalPercentage: 70,\r\n  },\r\n  {\r\n    id: 3,\r\n    maths: 50,\r\n    physics: 40,\r\n    chemistry: 60,\r\n    biology: 20,\r\n    english: 80,\r\n    totalPercentage: 50,\r\n  },\r\n  {\r\n    id: 4,\r\n    maths: 30,\r\n    physics: 20,\r\n    chemistry: 10,\r\n    biology: 20,\r\n    english: 5,\r\n    totalPercentage: 30,\r\n  },\r\n  {\r\n    id: 5,\r\n    maths: 30,\r\n    physics: 20,\r\n    chemistry: 10,\r\n    biology: 20,\r\n    english: 5,\r\n    totalPercentage: 70,\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nconst Subjects = (props) => {\r\n  const { totalPercentage } = props.studentData;\r\n\r\n  let variantName;\r\n  if (totalPercentage > 90 && totalPercentage <= 100) {\r\n    variantName = \"success\";\r\n  } else if (totalPercentage >= 70 && totalPercentage <= 90) {\r\n    variantName = \"info\";\r\n  } else if (totalPercentage < 70 && totalPercentage >= 31) {\r\n    variantName = \"warning\";\r\n  } else variantName = \"danger\";\r\n  return (\r\n    <div>\r\n      <h1>Subjects Percentage</h1>\r\n      <form>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Maths%\"\r\n          value={`Maths (${\r\n            props.studentData.maths\r\n              ? props.studentData.maths\r\n              : \"Click on Get data from server for Results\"\r\n          })`}\r\n        />\r\n        <br />\r\n        {/* {props.studentData.physics ? ( */}\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Physics%\"\r\n          value={`Physics (${\r\n            props.studentData.physics\r\n              ? props.studentData.physics\r\n              : \"NOT AVAILABLE\"\r\n          } )`}\r\n        />\r\n\r\n        <br />\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Chemistry%\"\r\n          value={`Chemistry(${\r\n            props.studentData.chemistry\r\n              ? props.studentData.chemistry\r\n              : \"NOT AVAILABLE\"\r\n          })`}\r\n        />\r\n        <br />\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Biology%\"\r\n          value={`Biology(${\r\n            props.studentData.biology\r\n              ? props.studentData.biology\r\n              : \"NOT AVAILABLE\"\r\n          })`}\r\n        />\r\n        <br />\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"English%\"\r\n          value={`English (${\r\n            props.studentData.english\r\n              ? props.studentData.english\r\n              : \"NOT AVAILABLE\"\r\n          })`}\r\n        />\r\n      </form>\r\n      <br />\r\n      <br />\r\n\r\n      <ProgressBar\r\n        variant={variantName}\r\n        now={totalPercentage}\r\n        label={`${totalPercentage ? totalPercentage : \"NOT AVAILABLE\"}%`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport data from \"../data/data\";\r\nimport Subjects from \"./Subjects\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Progress from \"./Progress\";\r\n\r\nexport default function Input() {\r\n  const [studentData, setStudentData] = useState({});\r\n  const [studentId, setStudentId] = useState(\"\");\r\n\r\n  const getData = (e) => {\r\n    e.preventDefault();\r\n    setStudentId(e.target.value);\r\n  };\r\n\r\n  const getStudentData = (e) => {\r\n    e.preventDefault();\r\n    data.map((student) => {\r\n      if (student.id === Number(studentId)) setStudentData(student);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container m-5\">\r\n      <h1>Calculate the percentage level of a pgit initerson's marks</h1>\r\n      <br />\r\n\r\n      <select className=\"custom-select\" onChange={getData}>\r\n        {data.map((student) => (\r\n          <option value={student.id}>{`Student Id (${student.id})`}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <br />\r\n      <button onClick={getStudentData}>get data from server</button>\r\n      <br />\r\n      <br />\r\n      <Subjects studentData={studentData} />\r\n      {/* <Progress studentData={studentData} /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Stats from \"./components/Progress\";\nimport { Container } from \"react-bootstrap\";\nimport Input from \"./components/Input\";\nimport Subjects from \"./components/Subjects\";\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <Input />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}